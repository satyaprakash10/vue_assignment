{"ast":null,"code":"import _asyncToGenerator from \"/Users/shivamvarma/Project/web/registration-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nvar APIURL = 'http://localhost:3000';\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    users: [],\n    selectedUser: []\n  },\n  getters: {\n    getAllUsers: function getAllUsers(state) {\n      return state.users;\n    },\n    getSelectedUser: function getSelectedUser(state) {\n      return state.selectedUser;\n    }\n  },\n  actions: {\n    fetchAllUsers: function fetchAllUsers(_ref) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                axios.get(\"\".concat(APIURL, \"/users\")).then(function (response) {\n                  commit('fetch_users', response.data);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    addUser: function addUser(_ref2, data) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                commit = _ref2.commit;\n                axios.post(\"\".concat(APIURL, \"/users\"), data).then(function (response) {\n                  commit('add_user', response.data);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    setSelectedUser: function setSelectedUser(_ref3, id) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                commit = _ref3.commit;\n                axios.get(\"\".concat(APIURL, \"/users/\").concat(id)).then(function (response) {\n                  commit('set_selected_user', response.data);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    updateUser: function updateUser(_ref4, _ref5) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var commit, data, id;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                commit = _ref4.commit;\n                data = _ref5.data, id = _ref5.id;\n                axios.put(\"\".concat(APIURL, \"/users/\").concat(id), data).then(function (response) {\n                  commit('update_user', response.data);\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    deleteUser: function deleteUser(_ref6, id) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        var commit;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                commit = _ref6.commit;\n                axios.delete(\"\".concat(APIURL, \"/users/\").concat(id)).then(function (response) {\n                  commit('delete_user', response.data);\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  },\n  mutations: {\n    fetch_users: function fetch_users(state, data) {\n      state.users = data;\n    },\n    add_user: function add_user(state, data) {\n      state.users.push(data);\n    },\n    update_user: function update_user(state, data) {\n      var pos = state.users.findIndex(function (user) {\n        return user.id === data.id;\n      });\n      state.users[pos] = data;\n    },\n    delete_user: function delete_user(state, id) {\n      var index = state.users.findIndex(function (user) {\n        return user.id === id;\n      });\n      state.users.splice(index, 1);\n    },\n    set_selected_user: function set_selected_user(state, data) {\n      state.selectedUser = data;\n    }\n  }\n});\nexport default store;","map":{"version":3,"sources":["/Users/shivamvarma/Project/web/registration-demo/src/store/index.js"],"names":["Vue","Vuex","axios","APIURL","use","store","Store","state","users","selectedUser","getters","getAllUsers","getSelectedUser","actions","fetchAllUsers","commit","get","then","response","data","addUser","post","setSelectedUser","id","updateUser","put","deleteUser","delete","mutations","fetch_users","add_user","push","update_user","pos","findIndex","user","delete_user","index","splice","set_selected_user"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nconst APIURL = 'http://localhost:3000'\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n  state: {\n    users: [],\n    selectedUser: [],\n  },\n\n  getters: {\n    getAllUsers: (state) => state.users,\n    getSelectedUser: (state) => state.selectedUser,\n  },\n\n  actions: {\n    async fetchAllUsers({ commit }) {\n      axios.get(`${APIURL}/users`).then((response) => {\n        commit('fetch_users', response.data)\n      })\n    },\n    async addUser({ commit }, data) {\n      axios.post(`${APIURL}/users`, data).then((response) => {\n        commit('add_user', response.data)\n      })\n    },\n    async setSelectedUser({ commit }, id) {\n      axios.get(`${APIURL}/users/${id}`).then((response) => {\n        commit('set_selected_user', response.data)\n      })\n    },\n    async updateUser({ commit }, { data, id }) {\n      axios.put(`${APIURL}/users/${id}`, data).then((response) => {\n        commit('update_user', response.data)\n      })\n    },\n    async deleteUser({ commit }, id) {\n      axios.delete(`${APIURL}/users/${id}`).then((response) => {\n        commit('delete_user', response.data)\n      })\n    },\n  },\n\n  mutations: {\n    fetch_users(state, data) {\n      state.users = data\n    },\n    add_user(state, data) {\n      state.users.push(data)\n    },\n    update_user(state, data) {\n      let pos = state.users.findIndex((user) => user.id === data.id)\n      state.users[pos] = data\n    },\n    delete_user(state, id) {\n      let index = state.users.findIndex((user) => user.id === id)\n      state.users.splice(index, 1)\n    },\n    set_selected_user(state, data) {\n      state.selectedUser = data\n    },\n  },\n})\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}